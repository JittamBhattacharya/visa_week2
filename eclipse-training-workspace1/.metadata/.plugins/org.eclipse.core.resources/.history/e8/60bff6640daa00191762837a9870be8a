package com.visa.prj.dao;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import javax.transaction.Transactional;
import org.springframework.stereotype.Repository;
import com.visa.prj.entity.Booking;
import com.visa.prj.entity.Hotel;
import com.visa.prj.entity.User;


@Repository
@Transactional
public class BookingDaoJpaImpl implements BookingDao {

	@PersistenceContext
	private EntityManager em;
	
	@Override
	public List<Hotel> findHotels(String criteria) {
		TypedQuery<Hotel> query = em.createQuery("from Hotel where hotel_name =:h" , Hotel.class);
		query.setParameter(Integer.parseInt("h"), criteria);
		return query.getResultList();
	}

	@Override
	public Hotel findHotelById(long id) {
		TypedQuery<Hotel> query = em.createQuery("from Hotel where id=:i" , Hotel.class);
		query.setParameter(Integer.parseInt("i"), id);
		return query.getResultList().get(0);
	}

	@Override
	public User getUser(String email, String password) {
		TypedQuery<User> query = em.createQuery("from User where  email = :e and password = :p" , User.class);
		query.setParameter("e" , email);
		query.setParameter("p" , password);
		return query.getResultList().get(0);
	}

	@Override
	public long createBooking(Booking booking) {
		em.persist(booking);
//		em.flush();
		return em.find(Booking.class, booking.getUser()).getId()   ;
		
	}

	@Override
	public List<Booking> getAllBookingsOfUser(User user) {
		TypedQuery<Booking> query = em.createQuery("from Booking where  user.email =  :u" , Booking.class);
		query.setParameter("u" , user.getEmail());
		return query.getResultList();
	
	}

}
